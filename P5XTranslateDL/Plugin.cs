using BepInEx;
using BepInEx.Unity.IL2CPP;
using System.IO;
using System.Reflection;
using BepInEx.Configuration;
using System.Net.Http;
using System.Text.Json.Nodes;

namespace P5XTranslateDL;

[BepInPlugin(pluginGuid, pluginName, pluginVersion)]
public class Plugin : BasePlugin
{
    public const string pluginGuid = "P5XTranslateDL";
    public const string pluginName = "P5X Translate DL";
    public const string pluginVersion = "0.2";

    enum languages { KR, CN, TW }
    private ConfigEntry<languages> configLanguage;
    private ConfigEntry<bool> includeAutoGen;

    public override void Load()
    {
        Log.LogInfo($"Plugin {pluginGuid} is loaded!");
        configLanguage = Config.Bind("Translate Lagnuage", "Langauge", languages.KR, "Language to download files for");
        includeAutoGen = Config.Bind("Auto Gen Translation", "AutoGen", false, "If you want to download AutoGeneratedTranslations, this will overwrite yours");
        getFromGit();
    }

    private async void getFromGit()
    {
        var pathString = Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location);
        pathString = pathString.Replace("plugins", "Translation\\en\\Text\\");

        Log.LogInfo(pathString);

        var fileString = "https://api.github.com/repos/JayJay34/P5XTranslate/contents/" + configLanguage.Value.ToString();

        Log.LogInfo(fileString);

        using var client = new HttpClient();
        {
            client.DefaultRequestHeaders.Clear();
            client.DefaultRequestHeaders.Add("User-Agent", "Other");
            var content = await client.GetStringAsync(fileString);
            var jObj = JsonNode.Parse(content);

            foreach (var obj in jObj.AsArray())
            {
                if (obj["name"].ToString() != "_AutoGeneratedTranslations.txt" || obj["name"].ToString() == "_AutoGeneratedTranslations.txt" && includeAutoGen.Value)
                {
                    var fileDownload = await client.GetStringAsync(obj["download_url"].ToString());
                    File.WriteAllText(pathString + obj["name"].ToString(), fileDownload);
                }
            }
        }
    }
}
