using System.Configuration;
using System.Reflection;
using System.Text.Json.Nodes;

namespace P5XDLForm
{
    public partial class MainForm : Form
    {
        public MainForm()
        {
            InitializeComponent();
            GetFromGit();
        }

        private void button1_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        private void progressBar1_Click(object sender, EventArgs e)
        {

        }

        async void GetFromGit()
        {

            var pathString = Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location) + "\\";
            pathString = pathString.Replace("plugins\\", "Translation\\en\\Text\\");

            var langauge = ConfigurationManager.AppSettings["Langauge"].ToString();
            bool includeAutoGen = Boolean.Parse(ConfigurationManager.AppSettings["AutoGen"]);
            bool downloadImages = Boolean.Parse(ConfigurationManager.AppSettings["DownloadImages"]);

            var fileString = "https://api.github.com/repos/JayJay34/P5XTranslate/contents/" + langauge;

            using var client = new HttpClient();
            {
                client.DefaultRequestHeaders.Clear();
                client.DefaultRequestHeaders.Add("User-Agent", "Other");
                var content = await client.GetStringAsync(fileString);
                var jObj = JsonNode.Parse(content);

                var fileCount = jObj.AsArray().Count() - 1;
                downloadPB.Step = 100 / fileCount;
                var currentFile = 1;

                foreach (var obj in jObj.AsArray())
                {
                    if (obj["name"].ToString() != "_AutoGeneratedTranslations.txt" || obj["name"].ToString() == "_AutoGeneratedTranslations.txt" && includeAutoGen)
                    {
                        downloadTxt.Text = obj["name"].ToString() + " (" + currentFile + "/" + fileCount + ")";
                        var fileDownload = await client.GetStringAsync(obj["download_url"].ToString());
                        File.WriteAllText(pathString + obj["name"].ToString(), fileDownload);

                        currentFile++;
                        downloadPB.PerformStep();
                    }
                }
                downloadPB.Value = 100;
                okBtn.Enabled = true;
            }
            this.Close();
        }
    }
}